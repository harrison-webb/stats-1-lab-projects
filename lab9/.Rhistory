# Your code here
library(ggplot2)
p <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point()
x77 <- data.frame(state.x77)
# Your code here
library(ggplot2)
p <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point()
p
# Your code here
library(ggplot2)
p <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point()
p
# Your code here
library(ggplot2)
p <- ggplot(x77, aes(x = Population, y=Area)) + geom_point()
p
x77 <- data.frame(state.x77)
# Your code here
library(ggplot2)
p <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point()
p
# Your code here
library(ggplot2)
plot(x77$Population, x77$Murder)
p <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point()
p
# Your code here
library(ggplot2)
plot(x77$Population, x77$Murder)
p <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point()
p
# Your code here
library(ggplot2)
plot(x77$Population, x77$)
# Your code here
library(ggplot2)
plot(x77$Population, x77$Murder)
p <- ggplot(x77, aes(x = Population, y=Murder, col())) + geom_point()
p
# Your code here
library(ggplot2)
popxMurder <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point()
popxFrost <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point()
popxArea <- ggplot(x77, aes(x = Population, y=Area)) + geom_point()
incomexHSGrad <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point()
# Your code here
library(ggplot2)
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() #income X HS grad
grid.arrange(p1,p2,p3,p4)
# Your code here
library(ggplot2)
library(gridExtra)
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() #income X HS grad
grid.arrange(p1,p2,p3,p4)
# Your code here
library(ggplot2)
library(gridExtra)
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad))  #income X HS grad
grid.arrange(p1,p2,p3,p4)
# Your code here
library(ggplot2)
library(gridExtra)
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() + ggtitle("Murder vs Population") #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() + ggtitle("Frost vs Population") #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() + ggtitle("Area vs Population") #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() + ggtitle("HS Graduation vs Income") #income X HS grad
grid.arrange(p1,p2,p3,p4)
View(x77)
View(x77)
# Your code here
library(ggplot2)
library(gridExtra)
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() + ggtitle("Murder vs Population") #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() + ggtitle("Frost vs Population") #pop X frost
p3 <- ggplot(x77, aes(x = Area, y=Population)) + geom_point() + ggtitle("Area vs Population") #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() + ggtitle("HS Graduation vs Income") #income X HS grad
grid.arrange(p1,p2,p3,p4)
# Your code here
library(ggplot2)
library(gridExtra)
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() + ggtitle("Murder vs Population") #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() + ggtitle("Frost vs Population") #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() + ggtitle("Area vs Population") #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() + ggtitle("HS Graduation vs Income") #income X HS grad
grid.arrange(p1,p2,p3,p4)
# Your code here
library(ggplot2)
library(gridExtra)
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() + ggtitle("Murder vs Population") #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() + ggtitle("Frost vs Population") #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() + ggtitle("Area vs Population") #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() + ggtitle("HS Graduation vs Income") #income X HS grad
grid.arrange(p1,p2,p3,p4)
# Your code here
libaray(UsingR)
# Your code here
library(UsingR)
p <- ggplot(batting, aes(x=SO, y=HR)) + geom_point() + ggtitle("Homeruns vs Strikeouts")
# Your code here
library(UsingR)
p <- ggplot(batting, aes(x=SO, y=HR)) + geom_point() + ggtitle("Homeruns vs Strikeouts")
p
# Your code here
library(UsingR)
p <- ggplot(batting, aes(x=SO, y=HR)) + geom_point() + ggtitle("Homeruns vs Strikeouts") + xlab("Strikeouts") + ylab("Homeruns")
p
# Your code here
library(UsingR)
p <- ggplot(batting, aes(x=SO, y=HR)) + geom_point() + ggtitle("Homeruns vs Strikeouts") + xlab("Strikeouts") + ylab("Homeruns")
p
correlation = cor(batting$SO, batting$HR)
print("Correlation between strikeouts and Home runs: " + correlation)
# Your code here
library(UsingR)
p <- ggplot(batting, aes(x=SO, y=HR)) + geom_point() + ggtitle("Homeruns vs Strikeouts") + xlab("Strikeouts") + ylab("Homeruns")
p
correlation = cor(batting$SO, batting$HR)
correlation
# Your code here
table <- xtabs(~ mfr + shelf, data = UScereal)
table
# Two-way table exploring origin and type
tab1 <- xtabs(~ Origin + Type, data = Cars93)
tab1
# A three-way table
tab2 <- xtabs(~ Origin + Type + Cylinders, data = Cars93)
# The following output is hard to parse
tab2
# This is easier to read
ftable(tab2, row.vars = 2, col.vars = c(1, 3))
# A four-way table
tab3 <- xtabs(~ Origin + Type + Cylinders + Man.trans.avail, data = Cars93)
ftable(tab3, row.vars = c(2, 4), col.vars = c(1, 3))
library(ggplot2)
library(gridExtra)
library(UsingR)
library(MASS)
library(ggplot2)
library(gridExtra)
library(UsingR)
library(MASS)
x77 <- data.frame(state.x77)
# Your code here
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() + ggtitle("Murder vs Population") #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() + ggtitle("Frost vs Population") #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() + ggtitle("Area vs Population") #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() + ggtitle("HS Graduation vs Income") #income X HS grad
grid.arrange(p1,p2,p3,p4)
# Your code here
p <- ggplot(batting, aes(x=SO, y=HR)) + geom_point() + ggtitle("Homeruns vs Strikeouts") + xlab("Strikeouts") + ylab("Homeruns")
p
correlation = cor(batting$SO, batting$HR)
correlation
# Your code here
table <- xtabs(~ mfr + shelf, data = UScereal)
table
# Your code here
# Your code here
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() + ggtitle("Murder vs Population") #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() + ggtitle("Frost vs Population") #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() + ggtitle("Area vs Population") #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() + ggtitle("HS Graduation vs Income") #income X HS grad
grid.arrange(p1,p2,p3,p4)
#In the above plots we see a strong positive relation between High School graduation rates and Average State #income. The other plots are not quite as explicit, however. There appears to be a slight positive relationship #between murder rates and state population, and a slight negative relationship between frost and population. The #Area vs Population chart has 3 distinct outliers; namely Alaska, Texas, and California, and the rest of the states #appear clustered in the corner as a result.
# Your code here
mosaicplot(HairEyeColor, shade = TRUE)
library(ggplot2)
library(gridExtra)
library(UsingR)
library(MASS)
x77 <- data.frame(state.x77)
# Your code here
p1 <- ggplot(x77, aes(x = Population, y=Murder)) + geom_point() + ggtitle("Murder vs Population") #pop X murder
p2 <- ggplot(x77, aes(x = Population, y=Frost)) + geom_point() + ggtitle("Frost vs Population") #pop X frost
p3 <- ggplot(x77, aes(x = Population, y=Area)) + geom_point() + ggtitle("Area vs Population") #pop X area
p4 <- ggplot(x77, aes(x = Income, y=HS.Grad)) + geom_point() + ggtitle("HS Graduation vs Income") #income X HS grad
grid.arrange(p1,p2,p3,p4)
#In the above plots we see a strong positive relation between High School graduation rates and Average State income. The other plots are not quite as explicit, however. There appears to be a slight positive relationship between murder rates and state population, and a slight negative relationship between frost and population. The Area vs Population chart has 3 distinct outliers; namely Alaska, Texas, and California, and the rest of the states appear clustered in the corner as a result.
# Your code here
p <- ggplot(batting, aes(x=SO, y=HR)) + geom_point() + ggtitle("Homeruns vs Strikeouts") + xlab("Strikeouts") + ylab("Homeruns")
p
correlation = cor(batting$SO, batting$HR)
correlation
# Your code here
table <- xtabs(~ mfr + shelf, data = UScereal)
table
# Your code here
mosaicplot(HairEyeColor, shade = TRUE)
#We see that the box for blue-eyed, blonde females is a large, dark blue rectangle. This corresponds to a standardized residual of >4, meaning the observed value is much greater than the expected value for this piece of the data. Standardized residuals greater than 3 are typically considered to be outliers in a data set.
