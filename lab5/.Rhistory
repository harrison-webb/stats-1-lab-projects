library(MASS)
library(MASS)
# Your code here
data("Cars93")
summary(Cars93)
#subset(Cars93, )
# Your code here
#data("Cars93")
#summary(Cars93)
subset(Cars93, with(Cars93, subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15))
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, with(Cars93, subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15))
# Your code here
data("Cars93")
#summary(Cars93)
#subset(Cars93, with(Cars93, subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15))
# Your code here
data("Cars93")
summary(Cars93)
#subset(Cars93, with(Cars93, subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15))
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Type, Max.Price), with(Cars93, subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15))
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15))
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
summary(Cars93)
#subset(Cars93, select = c(Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Make, Model, Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Manufacturer, Model, Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Make, Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
summary(Cars93)
subset(Cars93, select = c(Make, Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
summary(Cars93)
#subset(Cars93, select = c(Make, Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Make, Type, Cylinders, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
data("Cars93")
#summary(Cars93)
subset(Cars93, select = c(Make, Type, Max.Price), subset = Origin == "non-USA" & Cylinders == 4 & Max.Price <= 15)
# Your code here
?mtcars
# Your code here
datq(mtcars)
# Your code here
data(mtcars)
# Your code here
data(mtcars)
sapply(mtcars, sd)
# Your code here
data(mtcars)
sapply(mtcars, sd) #use sapply to apply standard deviation function to each column in the data set
# Your code here
data("Cars93")
summary(Cars93)
# Your code here
data("Cars93")
summary(Cars93[,1])
#numericCols =
# Your code here
data("Cars93")
summary(Cars93[1,])
#numericCols =
# Your code here
data("Cars93")
summary(Cars93)
#numericCols =
# Your code here
data("Cars93")
summary(Cars93[1,])
#numericCols =
# Your code here
data("Cars93")
summary(Cars93)
#numericCols =
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = subset(Cars93, select = isNumeric)
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = subset(Cars93, select = is.Numeric)
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = subset(Cars93, select = is.numeric)
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = sapply(Cars93, is.numeric)
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = sapply(Cars93, is.numeric)
summary(numericCols)
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = Cars93[,nums]
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = Cars93[sapply(Cars93, is.numeric)]
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = Cars93[sapply(Cars93, is.numeric)]
summary(numericCols)
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = Cars93[sapply(Cars93, is.numeric)] #get columns representing numeric variables
sapply(numericCols, sd) #apply sd fuction to all columns
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = Cars93[sapply(Cars93, is.numeric)] #get columns representing numeric variables
summary(numericCols)
#sapply(numericCols, sd) #apply sd fuction to all columns
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = Cars93[sapply(Cars93, is.numeric)] #get columns representing numeric variables
summary(numericCols)
sapply(numericCols, sd) #apply sd fuction to all columns
# Your code here
data("Cars93")
#summary(Cars93)
numericCols = Cars93[sapply(Cars93, is.numeric)] #get columns representing numeric variables
#summary(numericCols)
sapply(numericCols, sd) #apply sd fuction to all columns
getwd()
# Your code here
readfile = read.csv(olympic-medals2012.csv)
# Your code here
readfile = read.csv("olympic-medals2012.csv")
# Your code here
readfile = read.csv("olympic-medals2012.csv")
summary(readfile)
#olympic2012 = subset(readfile, select = c(IS))
# Your code here
readfile = read.csv("olympic-medals2012.csv")
summary(readfile)
olympic2012 = subset(readfile, select = c(ISO, Country.name, pop.2010, Gold, Silver, Bronze))
# Your code here
readfile = read.csv("olympic-medals2012.csv")
olympic2012 = subset(readfile, select = c(ISO, Country.name, pop.2010, Gold, Silver, Bronze))
# Your code here
readfile = read.csv("olympic-medals2012.csv")
olympic2012 = subset(readfile, select = c(ISO, Country.name, pop.2010, Gold, Silver, Bronze))
summary(olympic2012)
# Your code here
readfile = read.csv("olympic-medals2012.csv")
olympic2012 = subset(readfile, select = c(ISO, Country.name, pop.2010, Gold, Silver, Bronze))
olympic2012
# Your code here
readfile = read.csv("olympic-medals2012.csv") #read csv file
olympic2012 = subset(readfile, select = c(ISO, Country.name, pop.2010, Gold, Silver, Bronze)) #select specific columns
class(olympic2012)
# Your code here
readfile = read.csv("olympic-medals2012.csv") #read csv file
olympic2012 = subset(readfile, select = c(ISO, Country.name, pop.2010, Gold, Silver, Bronze)) #select specific columns
olympic2012
# Your code here
length(olympic2012[1,])
# Your code here
length(olympic2012[,1])
# Your code here
numCountries = length(olympic2012[,1])
noMedals = length(subset(olympic2012, subset = Gold + Silver + Bronze == 0))
# Your code here
numCountries = length(olympic2012[,1])
noMedals = subset(olympic2012, subset = Gold + Silver + Bronze == 0)
noMedals
# Your code here
numCountries = length(olympic2012[,1])
noMedals = subset(olympic2012, subset = Gold + Silver + Bronze == 0)
numNoMedals = length(noMedals[,1])
numNoMedals
# Your code here
numCountries = length(olympic2012[,1])
noMedals = subset(olympic2012, subset = Gold + Silver + Bronze == 0)
numNoMedals = length(noMedals[,1])
numNoMedals / numCountries
# Your code here
numCountries = length(olympic2012[,1])
noMedals = subset(olympic2012, subset = Gold + Silver + Bronze == 0)
numNoMedals = length(noMedals[,1])
numNoMedals / numCountries #proportion of countries that earned no medals
